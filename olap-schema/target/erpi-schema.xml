<?xml version="1.0" encoding="UTF-8"?><!-- 
     Cubes using views for tenant support and xTuple strings.  
     Note that entity definitions including other entity defintions must be defined in the
	 DTD using % and referenced in the DTD.  They can then subtituted in the XML and in 
	 XML included via entities.
--><Schema name="xTuple"><!-- 
	      Careful, there are issues with the schema parser.  UserDefinedFunctions must be last.
	      For some reason sales must be after crm or the UserDefinedFuctions aren't found when
		  used by sales.
	--><Parameter name="APRValue" type="Numeric" modifiable="false" defaultValue=".065"/><!-- Conformed Dimensions --><!-- 
	Copyright 2012 Jeff Gunderson
	Licensed under the GNU Public License, Version 3.0
--><Dimension highCardinality="false" name="Company" caption="Company"><Hierarchy hasAll="true" allMemberName="All Companies" allMemberCaption="All Companies by Name" primaryKey="COMPANY_K" caption="Company by Name"><View alias="COMPANY"><SQL dialect="generic"> 
			select * from "ERPI"."COMPANY" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Company Name" caption="Company Name" column="COMPANY_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Company Key" caption="Company Number" column="COMPANY_K" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Company Code" hasAll="true" allMemberName="All Companies by Code" allMemberCaption="All Companies by Number" primaryKey="COMPANY_K" caption="Company by Number"><View alias="COMPANY"><SQL dialect="generic"> 
			select * from "ERPI"."COMPANY" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Company Code" caption="Company Number" column="COMPANY_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Company Code" caption="Company Number" column="COMPANY_NK" type="String">
		</Property><Property name="Company Name" caption="Company Name" column="COMPANY_NAME" type="String">
		</Property></Level><Level name="Company Name" caption="Company Name" column="COMPANY_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension highCardinality="false" name="Business Unit" caption="Business Unit"><Hierarchy hasAll="true" allMemberName="All Business Units" allMemberCaption="All Business Units by Name" primaryKey="BUSINESS_UNIT_K" caption="Business Units by Name"><View alias="BUSINESS_UNIT"><SQL dialect="generic"> 
			select * from "ERPI"."BUSINESS_UNIT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Business Unit" caption="Business Unit Name" column="BUSINESS_UNIT" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Business Unit Key" column="BUSINESS_UNIT_K" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Business Unit Code" hasAll="true" allMemberCaption="All Business Units by Number" allMemberName="All Business Units by Code" primaryKey="BUSINESS_UNIT_K" caption="Business Unit by Number"><View alias="BUSINESS_UNIT"><SQL dialect="generic"> 
			select * from "ERPI"."BUSINESS_UNIT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Business Unit Code" caption="Business Unit Number" column="BUSINESS_UNIT_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Business Unit Key" caption="Business Unit Number" column="BUSINESS_UNIT_K" type="String">
        </Property></Level><Level name="Business Unit" caption="Business Unit Name" column="BUSINESS_UNIT" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Business Unit Key" caption="Business Unit Number" column="BUSINESS_UNIT_K" type="String">
        </Property></Level></Hierarchy></Dimension><Dimension highCardinality="false" name="Profit Center" caption="Profit Center"><Hierarchy hasAll="true" allMemberName="All Profit Centers" allMemberCaption="All Profit Centers by Name" primaryKey="PROFIT_CENTER_K" caption="Profit Center by Name"><View alias="PROFIT_CENTER"><SQL dialect="generic"> 
			select * from "ERPI"."PROFIT_CENTER" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Profit Center" caption="Profit Center Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Profit Center Key" caption="Profit Center Number" column="PROFIT_CENTER_K" type="String">
		</Property></Level></Hierarchy><Hierarchy name="Profit Centers by Code" hasAll="true" allMemberCaption="All Profit Centers by Number" allMemberName="All Profit Centers by Code" primaryKey="PROFIT_CENTER_K" caption="Profit Centers by Code"><View alias="PROFIT_CENTER"><SQL dialect="generic"> 
			select * from "ERPI"."PROFIT_CENTER" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Profit Center Code" caption="Profit Center Number" column="PROFIT_CENTER_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Profit Center Key" column="PROFIT_CENTER_K" type="String">
		</Property></Level><Level name="Profit Center" caption="Profit Center Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Profit Center Key" column="PROFIT_CENTER_K" type="String">
		</Property></Level></Hierarchy></Dimension><Dimension highCardinality="false" name="Product" caption="Item"><!-- Simplify dimension
    <Hierarchy hasAll="true" allMemberName="All Products" allMemberCaption="&ProductAll;" primaryKey="PRODUCT_K" caption="&ProductByName;">
	&product-relation;
      <Level name="Product" caption="&ProductName;" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
      </Level>
    </Hierarchy>
	--><Hierarchy name="Product Code" hasAll="true" allMemberName="All Products by Code" allMemberCaption="All Items" primaryKey="PRODUCT_K" caption="Item"><View alias="PRODUCT"><SQL dialect="generic"> 
			select * from "ERPI"."PRODUCT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Product Code" caption="Item Number" column="PRODUCT_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Product Code" caption="Item Number" column="PRODUCT_NK" type="String">
        </Property><Property name="Product Name" caption="Item Name" column="PRODUCT_NAME" type="String">
        </Property></Level><Level name="Product" caption="Item Name" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy><!-- Simplify dimension
    <Hierarchy name="Product by Category" allMemberCaption="&ProductCategoryAll;" hasAll="true" allMemberName="All Products by Category" primaryKey="PRODUCT_K" caption="&ProductByCategory;">
	&product-relation;
      <Level name="Category" caption="&ProductCategory;" column="CATEGORY" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
        <Property name="Category Name" column="CATEGORY" type="String">
        </Property>
      </Level>
      <Level name="Product" caption="&ProductName;" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
      </Level>
    </Hierarchy>
	--><Hierarchy name="Products by Category by Code" allMemberCaption="All Items by Category" hasAll="true" allMemberName="All Products by Category by Code" primaryKey="PRODUCT_K" caption="Item by Category"><View alias="PRODUCT"><SQL dialect="generic"> 
			select * from "ERPI"."PRODUCT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Category" caption="Item Category" column="CATEGORY" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Category Name" column="CATEGORY" type="String">
        </Property></Level><Level name="Product Code" caption="Item Number" column="PRODUCT_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Product" caption="Item Name" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy><!-- Simplify dimension
    <Hierarchy name="Product by Class" allMemberCatpion="&ProductClassAll;" hasAll="true" allMemberName="All Products by Class" primaryKey="PRODUCT_K" caption="&ProductByClass;">
	&product-relation;
      <Level name="Class" caption="&ProductClass;" column="CLASS" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
        <Property name="Class Name" column="CLASS" type="String">
        </Property>      
	</Level>
      <Level name="Product" caption="&ProductName;" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
      </Level>
    </Hierarchy>
	--><Hierarchy name="Products by Class by Code" allMemberCaption="All Items by Class" hasAll="true" allMemberName="All Products by Class by Code" primaryKey="PRODUCT_K" caption="Item by Class"><View alias="PRODUCT"><SQL dialect="generic"> 
			select * from "ERPI"."PRODUCT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Class" caption="Item Class" column="CLASS" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Class Name" column="CLASS" type="String">
        </Property></Level><Level name="Product Code" caption="Item Number" column="PRODUCT_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Product" caption="Item Name" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy><!-- Simplify dimension
    <Hierarchy name="Product by Type" allMemberCatpion="&ProductTypeAll;" hasAll="true" allMemberName="All Products by Type" primaryKey="PRODUCT_K" caption="&ProductByType;">
	&product-relation;
      <Level name="Type" caption="&ProductType;" column="TYPE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
        <Property name="Type Name" column="TYPE" type="String">
        </Property>
      </Level>
      <Level name="Product" caption="&ProductName;" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
      </Level>
    </Hierarchy>
	--><Hierarchy name="Products by Type by Code" allMemberCatpion="All Items by Type" hasAll="true" allMemberName="All Products by Type by Code" primaryKey="PRODUCT_K" caption="Item by Type"><View alias="PRODUCT"><SQL dialect="generic"> 
			select * from "ERPI"."PRODUCT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Type" caption="Item Type" column="TYPE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Type Name" column="TYPE" type="String">
        </Property></Level><Level name="Product Code" caption="Item Number" column="PRODUCT_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Product" caption="Item Name" column="PRODUCT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension highCardinality="false" name="Account" caption="GL Account"><Hierarchy hasAll="true" allMemberName="All Accounts" allMemberCaption="All GL Accounts by Name" primaryKey="ACCOUNT_K" caption="GL Account by Name"><Table name="GL_ACCOUNT" schema="ERPI"/><Level name="Account" caption="GL Account Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Account Key" column="ACCOUNT_K" caption="GL Account Number" type="String">
        </Property><Property name="Account Name" caption="GL Account Name" column="NAME" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Account Number" hasAll="true" allMemberName="All Accounts by Number" allMemberCaption="All GL Accounts by Number" primaryKey="ACCOUNT_K" caption="GL Account by Number"><Table name="GL_ACCOUNT" schema="ERPI"/><Level name="Account Number" caption="GL Account Number" column="ACCOUNT_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Account Key" column="ACCOUNT_K" caption="GL Account Number" type="String">
        </Property><Property name="Account Name" caption="GL Account Name" column="NAME" type="String">
        </Property></Level><Level name="Account" caption="GL Account Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Account Key" column="ACCOUNT_K" caption="GL Account Number" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Accounts by Type by Subtype" allMemberCaption="All GL Accounts by Type by Subtype" hasAll="true" allMemberName="All Accounts by Type by Subtype" primaryKey="ACCOUNT_K" caption="GL Account by Type by Subtype"><Table name="GL_ACCOUNT" schema="ERPI"/><Level name="Type" caption="GL Account Type" column="TYPE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Subtype" caption="GL Account Subtype" column="SUBTYPE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Account" caption="GL Account Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Account Key" column="ACCOUNT_K" caption="GL Account Number" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Accounts by CFType" allMemberCaption="All GL Accounts by Cash Flow Type" hasAll="true" allMemberName="All Accounts by CFType" primaryKey="ACCOUNT_K" caption="GL Account by Cash Flow Type"><Table name="GL_ACCOUNT" schema="ERPI"/><Level name="CFType" caption="GL Account Cash Flow Type" column="CFTYPE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Account" caption="GL Account Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Account Key" column="ACCOUNT_K" caption="GL Account Number" type="String">
        </Property></Level></Hierarchy></Dimension><Dimension highCardinality="false" name="Division" caption="Division"><Hierarchy hasAll="true" allMemberCaption="All Divisions by Name" allMemberName="All Divisions" primaryKey="DIVISION_K" caption="Division by Name"><View alias="DIVISION"><SQL dialect="generic"> 
			select * from "ERPI"."DIVISION" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Division" caption="Division Name" column="DIVISION_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Division Key" caption="Division Number" column="DIVISION_K" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Division Code" allMemberCaption="All Divisions by Number" hasAll="true" allMemberName="All Divisions by Code" primaryKey="DIVISION_K" caption="Division by Number"><View alias="DIVISION"><SQL dialect="generic"> 
			select * from "ERPI"."DIVISION" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Division Code" catpion="Division Number" column="DIVISION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Division Key" caption="Division Number" column="DIVISION_K" type="String">
        </Property></Level><Level name="Division" caption="Division Name" column="DIVISION_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Division Key" caption="Division Number" column="DIVISION_K" type="String">
        </Property></Level></Hierarchy></Dimension><Dimension highCardinality="false" name="Customer" catpion="Customer"><!-- Simplify dimension
    <Hierarchy hasAll="true" allMemberCaption="&CustomerAll;" allMemberName="All Customers" primaryKey="CUSTOMER_K" caption="&CustomerByName;">
	&customer-relation;
      <Level name="Customer Name" caption="&CustomerName;" column="CUSTOMER_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never">
        <Property name="Payment Terms" caption="&PaymentTerms;" column="PAYMENT_TERMS" type="String">
        </Property>
        <Property name="Credit Limit" caption="&CreditLimit;" column="CREDIT_LIMIT" type="String">
        </Property>
      </Level>
    </Hierarchy>
	--><Hierarchy name="Customer Code" allMemberCatpion="All Customers" hasAll="true" allMemberName="All Customers by Code" primaryKey="CUSTOMER_K" caption="Customer"><View alias="CUSTOMER"><SQL dialect="generic"> 
			select * from "ERPI"."CUSTOMER" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Customer Code" caption="Customer Number" column="CUSTOMER_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Customer Name" caption="Customer Name" column="CUSTOMER_NAME" type="String">
		</Property><Property name="Payment Terms" caption="Payment Terms" column="PAYMENT_TERMS" type="String">
		</Property><Property name="Credit Limit" caption="Credit Limit" column="CREDIT_LIMIT" type="String">
		</Property><Property name="Customer Code" caption="Customer Number" column="CUSTOMER_NK" type="String">
		</Property></Level><Level name="Customer Name" caption="Customer Name" column="CUSTOMER_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Payment Terms" caption="Payment Terms" column="PAYMENT_TERMS" type="String">
        </Property><Property name="Credit Limit" caption="Credit Limit" column="CREDIT_LIMIT" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Customers by Type" allMemberCatpion="All Customers By Type" hasAll="true" allMemberName="All Customers by Type" primaryKey="CUSTOMER_K" caption="Customers By Type"><View alias="CUSTOMER"><SQL dialect="generic"> 
			select * from "ERPI"."CUSTOMER" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Customer Type" caption="Customer Type" column="CUSTOMER_TYPE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/><Level name="Customer Code" caption="Customer Number" column="CUSTOMER_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Customer Name" caption="Customer Name" column="CUSTOMER_NAME" type="String">
		</Property><Property name="Payment Terms" caption="Payment Terms" column="PAYMENT_TERMS" type="String">
		</Property><Property name="Credit Limit" caption="Credit Limit" column="CREDIT_LIMIT" type="String">
		</Property><Property name="Customer Code" caption="Customer Number" column="CUSTOMER_NK" type="String">
		</Property></Level><Level name="Customer Name" caption="Customer Name" column="CUSTOMER_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Payment Terms" caption="Payment Terms" column="PAYMENT_TERMS" type="String">
        </Property><Property name="Credit Limit" caption="Credit Limit" column="CREDIT_LIMIT" type="String">
        </Property></Level></Hierarchy></Dimension><Dimension highCardinality="false" name="Account Rep" caption="Sales Rep"><!-- Simplify dimension
    <Hierarchy hasAll="true" allMemberCaption="&AccountRepAll;" allMemberName="All Account Reps" primaryKey="SURROGATE_K" caption="&AccountRepByName;">
	&account-rep-relation;
      <Level name="Account Rep Name" caption="&AccountRepName;" column="NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never">
      </Level>
    </Hierarchy>
	--><Hierarchy hasAll="true" name="Account Reps by Code" allMemberCaption="All Sales Reps by Number" allMemberName="All Account Reps by Code" primaryKey="SURROGATE_K" caption="Sales Rep by Number"><View alias="ACCOUNT_REP"><SQL dialect="generic"> 
			select * from "ERPI"."ACCOUNT_REP" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Account Rep Code" caption="Sales Rep Number" column="ID_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Account Rep Code" caption="Sales Rep Number" column="ID_NK" type="String">
        </Property><Property name="Account Rep Name" caption="Sales Rep Name" column="NAME" type="String">
        </Property></Level><Level name="Account Rep Name" caption="Sales Rep Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension highCardinality="false" name="CRM Account" caption="CRM Account"><Hierarchy hasAll="true" name="Account Reps by Code" allMemberCaption="All CRM Accounts by Number" allMemberName="All CRM Accounts by Code" primaryKey="SURROGATE_K" caption="CRM Account by Number"><View alias="CRM_ACCOUNT"><SQL dialect="generic"> 
			select * from "ERPI"."CRM_ACCOUNT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="CRM Account Code" caption="CRM Account Number" column="ID_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="CRM Account Code" caption="CRM Account Number" column="ID_NK" type="String">
        </Property><Property name="CRM Account Name" caption="CRM Account Name" column="NAME" type="String">
        </Property></Level><Level name="CRM Account Name" caption="CRM Account Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension highCardinality="false" name="User" caption="User"><Hierarchy hasAll="true" name="Users by Code" allMemberCaption="All Users by Number" allMemberName="All Users by Code" primaryKey="SURROGATE_K" caption="User by Number"><View alias="CRM_ACCOUNT"><SQL dialect="generic"> 
			select * from "ERPI"."CRM_ACCOUNT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="User Code" caption="User Number" column="ID_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="User Code" caption="User Number" column="ID_NK" type="String">
        </Property><Property name="User Name" caption="User Name" column="NAME" type="String">
        </Property></Level><Level name="User Name" caption="User Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension highCardinality="false" name="Prospect" caption="Prospect"><Hierarchy hasAll="true" name="Prospects by Code" allMemberCaption="All Prospects by Number" allMemberName="All Propsects by Code" primaryKey="SURROGATE_K" caption="Prospect by Number"><View alias="CRM_ACCOUNT"><SQL dialect="generic"> 
			select * from "ERPI"."CRM_ACCOUNT" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Prospect Code" caption="" column="ID_NK" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Prospect Code" caption="Prospect Number" column="ID_NK" type="String">
        </Property><Property name="Prospect Name" caption="Prospect Name" column="NAME" type="String">
        </Property></Level><Level name="Prospect Name" caption="Prospect Name" column="NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension type="TimeDimension" highCardinality="false" name="Fiscal Period" caption="Fiscal Period"><Hierarchy name="Fiscal Period CL" hasAll="true" allMemberName="All Years" allMemberCaption="" primaryKey="FISCAL_PERIOD_K" caption="Fiscal Period CL"><View alias="FISCAL_PERIOD"><SQL dialect="generic"> 
			select * from "ERPI"."FISCAL_PERIODS_CL" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Fiscal Year" caption="Fiscal Year" column="FISCAL_YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never"><Property name="Fiscal Variant" caption="Fiscal Variant" column="FISCAL_VARIANT" type="String">
        </Property></Level><Level name="Fiscal Period" caption="Fiscal Period" column="FISCAL_PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never"><Property name="Fiscal Variant" caption="Fiscal Variant" column="FISCAL_VARIANT" type="String">
        </Property><Property name="Date" caption="Date" column="END_DATE" type="String">
        </Property><Property name="Days Date" caption=" Date" column="END_DAYS_DATE" type="Numeric">
        </Property><Property name="JBegin Days Date" caption="Days Begin Date" column="BEGIN_DAYS_DATE" type="Numeric">
        </Property><Property name="Fiscal Period Key" caption="Fiscal Period Number" column="FISCAL_PERIOD_K" type="Numeric">
        </Property><Property name="Fiscal Year" caption="Fiscal Year" column="FISCAL_YEAR" type="Numeric">
        </Property><Property name="Fiscal Period" caption="Fiscal Period" column="FISCAL_PERIOD" type="Numeric">
        </Property></Level></Hierarchy></Dimension><Dimension type="TimeDimension" highCardinality="false" name="Period" caption="Month/Period"><Hierarchy name="Fiscal Period CL" hasAll="true" allMemberName="All Years" allMemberCaption="" primaryKey="FISCAL_PERIOD_K" caption="Month/Period CL"><View alias="FISCAL_PERIOD"><SQL dialect="generic"> 
			select * from "ERPI"."PERIODS_CL" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Fiscal Year" caption="Year" column="FISCAL_YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never"><Property name="Fiscal Variant" caption="Fiscal Variant" column="FISCAL_VARIANT" type="String">
        </Property></Level><Level name="Fiscal Period" caption="Month/Period" column="FISCAL_PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never"><Property name="Fiscal Variant" caption="Fiscal Variant" column="FISCAL_VARIANT" type="String">
        </Property><Property name="Date" caption="Date" column="END_DATE" type="String">
        </Property><Property name="Days Date" caption=" Date" column="END_DAYS_DATE" type="Numeric">
        </Property><Property name="JBegin Days Date" caption="Days Begin Date" column="BEGIN_DAYS_DATE" type="Numeric">
        </Property><Property name="Fiscal Period Key" caption="Fiscal Period Number" column="FISCAL_PERIOD_K" type="Numeric">
        </Property><Property name="Fiscal Year" caption="Fiscal Year" column="FISCAL_YEAR" type="Numeric">
        </Property><Property name="Fiscal Period" caption="Fiscal Period" column="FISCAL_PERIOD" type="Numeric">
        </Property></Level></Hierarchy></Dimension><Dimension name="Issue Date" type="TimeDimension" highCardinality="false"><Hierarchy name="Calendar" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Period"><View alias="ISSUE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Period" column="PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Period"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ISSUE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Months" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Month"><View alias="ISSUE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Month" column="MONTH" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Month"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ISSUE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Weeks" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Week"><View alias="ISSUE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Week" column="WEEK" type="Numeric" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never" caption="Week"><Property name="Week" column="WEEK" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ISSUE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy></Dimension><Dimension type="TimeDimension" highCardinality="false" name="Promise Date"><Hierarchy name="Calendar" hasAll="true" allMemberName="All Years" allMemberCaption="" primaryKey="DAYS_DATE" caption="Calendar by Period"><View alias="PROMISE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Period" column="PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Period"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "PROMISE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Months" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Month"><View alias="PROMISE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Month" column="MONTH" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Month"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ISSUE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Weeks" hasAll="true" allMemberName="All Years" allMemberCaption="" primaryKey="DAYS_DATE" caption="Calendar by Week"><View alias="PROMISE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Week" column="WEEK" type="Numeric" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never" caption="Week"><Property name="Week" column="WEEK" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "PROMISE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy></Dimension><!-- CRM Cubes --><Cube name="CRQuote" cache="true" enabled="true" caption="Quotes" defaultMeasure="Amount, Quote Gross"><View alias="CRM_QUOTE_FACTS"><SQL dialect="generic"> 
			select * from "ERPI"."CRM_QUOTE_FACTS" WHERE "TENANT" = '[organization]' 
		</SQL></View><!--  No Company in xTuple
    <DimensionUsage source="Company" name="Company" caption="&Company;"  foreignKey="COMPANY_K" highCardinality="false">
    </DimensionUsage>
	--><!--  No Sales Organizations in xTuple
    <DimensionUsage source="Division" name="Division" caption="&Division;" foreignKey="DIVISION_K" highCardinality="false">
    </DimensionUsage>
    <DimensionUsage source="Business Unit" name="Business Unit" caption="&BusinessUnit;"  foreignKey="BUSINESS_UNIT_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="Customer" name="Customer" caption="Customer" foreignKey="CUSTOMER_K" highCardinality="false"/><!--  No Profit Center in xTuple Sales
    <DimensionUsage source="Profit Center" name="Profit Center" caption="&ProfitCenter;" foreignKey="PROFIT_CENTER_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="Account Rep" name="Account Rep" caption="Sales Rep" foreignKey="ACCOUNT_REP_K" highCardinality="false"/><DimensionUsage source="Product" caption="Item" name="Product" foreignKey="ITEM_K" highCardinality="false"/><Dimension type="StandardDimension" highCardinality="false" name="Quote" caption="Quote"><Hierarchy hasAll="true" allMemberCaption="All Quotes" allMemberName="All Quotes" caption="Quote"><Level name="Quote" caption="Quote Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Property name="Quote Name" caption="" column="ID_DOCUMENT_NAME" type="String">
        </Property></Level><Level name="Quote Line Item" caption="QuoteLine Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy><Hierarchy name="Quote by Status" allMemberCaption="Quote Status" hasAll="true" allMemberName="All Quotes by Status" caption="Quote By Status"><Level name="Quote Status" caption="Quote Status" column="STATUS" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Quote" caption="Quote Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Quote Line Item" caption="QuoteLine Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><DimensionUsage source="Issue Date" name="Issue Date" caption="Quote Date" foreignKey="ISSUE_DATE_K" highCardinality="false"/><DimensionUsage source="Promise Date" name="Promise Date" caption="Promise Date" foreignKey="PROMISE_DATE_K" highCardinality="false"/><Dimension type="TimeDimension" foreignKey="EXPIRE_DATE_K" highCardinality="false" name="Expire Date" caption="Expiration Date"><Hierarchy name="Calendar" hasAll="true" allMemberName="All Years" allMemberCaption="" primaryKey="DAYS_DATE" caption="Calendar by Period"><View alias="EXPIRE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Period" column="PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Period"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "EXPIRE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Months" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Month"><View alias="EXPIRE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Month" column="MONTH" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Month"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "EXPIRE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Weeks" hasAll="true" allMemberName="All Years" allMemberCaption="" primaryKey="DAYS_DATE" caption="Calendar by Week"><View alias="EXPIRE_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Week" column="WEEK" type="Numeric" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never" caption="Week"><Property name="Week" column="WEEK" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "EXPIRE_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy></Dimension><Dimension name="Bill City" caption="Bill-To City" foreignKey="BILL_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Bill-To Cities" allMemberName="All Bill Cities" primaryKey="GEO_DATA_K" caption="Bill-To Cities by State by Country"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">country</Annotation></Annotations></Level><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">city</Annotation></Annotations></Level></Hierarchy><Hierarchy name="Bill Region" hasAll="true" allMemberCaption="All Bill-To States" allMemberName="All Bill Regions" primaryKey="GEO_DATA_K" caption="Bill-To Region"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations></Level></Hierarchy></Dimension><Dimension name="Ship City" caption="Ship-To City" foreignKey="SHIP_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Ship-To Cities" allMemberName="All Ship Cities" primaryKey="GEO_DATA_K" caption="Ship-To Cities by Region by Country"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">country</Annotation></Annotations></Level><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">city</Annotation></Annotations></Level></Hierarchy><Hierarchy name="Ship Region" hasAll="true" allMemberCaption="All Ship-To Regions" allMemberName="All Ship Regions" primaryKey="GEO_DATA_K" caption="Ship-To Region"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations></Level></Hierarchy></Dimension><Measure name="Amount, Quote Gross" caption="Amount, Quote" column="AMOUNT" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Quote Gross List" caption="Amount, Customer Price" column="AMOUNT_LIST" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Quote Quantity" caption="Amount, Quote Quantity" column="QUANTITY_ORDER" formatString="#,###" aggregator="sum"/><Measure name="Count, Quotes" caption="Count, Quotes" column="ID_DOCUMENT_NK" formatString="#,###" aggregator="distinct-count"/><Measure name="Days Quote Date" column="ISSUE_DATE_K" formatString="########" aggregator="min" visible="false"/><Measure name="Days Promise Date" column="PROMISE_DATE_K" formatString="########" aggregator="max" visible="false"/><Measure name="Days Expire Date" column="EXPIRE_DATE_K" formatString="########" aggregator="max" visible="false"/><CalculatedMember name="Amount, Quote Discount" caption="Amount, Quote Discount" dimension="Measures" visible="true"><Formula>
        
                [Measures].[Amount, Quote Gross List] - [Measures].[Amount, Quote Gross] 
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Average, Quote Gross" caption="Average, Quote" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Quotes] = 0, 0, [Measures].[Amount, Quote Gross]/[Measures].[Count, Quotes])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><!--
        For dates if we have not date or we are not at the Quote level, return null
--><CalculatedMember name="Date, Quote" caption="Date, Quote" dimension="Measures" visible="true"><Formula>
        
            iif ([Quote].CurrentMember.level.ordinal &lt;&gt; 1 AND [Quote].level.ordinal &lt;&gt; 2 AND [Quote.Quote by Status].level.ordinal &lt;&gt; 2 AND [Quote.Quote by Status].level.ordinal &lt;&gt; 3 , "",
              iif([Measures].[Days Quote Date] is empty,  cast (null as string),
                iif([Measures].[Days Quote Date] = 0, "",
                getDateString(cast([Measures].[Days Quote Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Promise" caption="Date, Promise" dimension="Measures" visible="true"><Formula>
        
            iif ([Quote].CurrentMember.level.ordinal &lt;&gt; 1 AND [Quote].level.ordinal &lt;&gt; 2 AND [Quote.Quote by Status].level.ordinal &lt;&gt; 2 AND [Quote.Quote by Status].level.ordinal &lt;&gt; 3 , "",
              iif([Measures].[Days Promise Date] is empty, cast (null as string),
                iif([Measures].[Days Promise Date] = 0, "",
                getDateString(cast([Measures].[Days Promise Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Expire" caption="Date, Expiration" dimension="Measures" visible="true"><Formula>
        
            iif ([Quote].CurrentMember.level.ordinal &lt;&gt; 1 AND [Quote].level.ordinal &lt;&gt; 2 AND [Quote.Quote by Status].level.ordinal &lt;&gt; 2 AND [Quote.Quote by Status].level.ordinal &lt;&gt; 3 , "",
              iif([Measures].[Days Expire Date] is empty OR [Measures].[Days Expire Date] = -1 , cast (null as string),
                iif([Measures].[Days Expire Date] = 0, "",
                getDateString(cast([Measures].[Days Expire Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Days, Now to Expiration" caption="Days, Now to Expiration" dimension="Measures" visible="true"><Formula>
        
			iif([Measures].[Days Expire Date] = -1,
			  cast(null as numeric),
			  [Measures].[Days Expire Date] - cast(getCurrentDays("today") as numeric)
			)
		
      </Formula></CalculatedMember></Cube><Cube name="CROpportunity" cache="true" enabled="true" caption="Opportunities" defaultMeasure="Amount, Opportunity Gross"><View alias="CRM_OPPORTUNITY_FACTS"><SQL dialect="generic"> 
			select * from "ERPI"."CRM_OPPORTUNITY_FACTS" WHERE "TENANT" = '[organization]' 
		</SQL></View><!--  No Company in xTuple
    <DimensionUsage source="Company" name="Company" caption="&Company;"  foreignKey="COMPANY_K" highCardinality="false">
    </DimensionUsage>
	--><!--  No Sales Organizations in xTuple
    <DimensionUsage source="Division" name="Division" caption="&Division;" foreignKey="DIVISION_K" highCardinality="false">
    </DimensionUsage>
    <DimensionUsage source="Business Unit" name="Business Unit" caption="&BusinessUnit;"  foreignKey="BUSINESS_UNIT_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="CRM Account" name="CRM Account" caption="CRM Account" foreignKey="CRM_ACCOUNT_K" highCardinality="false"/><!--  No Profit Center in xTuple Sales
    <DimensionUsage source="Profit Center" name="Profit Center" caption="&ProfitCenter;" foreignKey="PROFIT_CENTER_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="User" name="User" caption="Assigned User" foreignKey="USER_K" highCardinality="false"/><Dimension type="StandardDimension" highCardinality="false" name="Opportunity" caption="Opportunity"><Hierarchy hasAll="true" allMemberCaption="All Opportunities" allMemberName="All Opportunities" caption="Opportunity"><Level name="Opportunity" caption="Opportunity Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Property name="Opportunity Name" caption="" column="ID_DOCUMENT_NAME" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Opportunity by Status by Type" hasAll="true" allMemberCaption="" allMemberName="All Opportunities" primaryKey="Opportunity_K" caption="Opportunity By Status by Type"><Level name="Opportunity Status" caption="Opportunity Status" column="STATUS" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity Type" caption="Opportunity Type" column="TYPE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity" caption="Opportunity Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy><Hierarchy name="Opportunity by Status by Stage" allMemberCaption="" hasAll="true" allMemberName="All Opportunities by Status" caption="Opportunity By Status by Stage"><Level name="Opportunity Status" caption="Opportunity Status" column="STATUS" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity Stage" caption="Opportunity Stage" column="STAGE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity" caption="Opportunity Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><DimensionUsage source="Issue Date" name="Issue Date" caption="Opportunity Date" foreignKey="ISSUE_DATE_K" highCardinality="false"/><Dimension type="TimeDimension" foreignKey="ASSIGN_DATE_K" highCardinality="false" name="Assigned Date" caption="Assigned Date"><Hierarchy name="Calendar" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Period"><View alias="ASSIGNED_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Period" column="PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Period"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ASSIGNED_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Months" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Month"><View alias="ASSIGNED_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Month" column="MONTH" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Month"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ASSIGNED_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Weeks" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Week"><View alias="ASSIGNED_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Week" column="WEEK" type="Numeric" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never" caption="Week"><Property name="Week" column="WEEK" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ASSIGNED_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy></Dimension><Dimension type="TimeDimension" foreignKey="TARGET_DATE_K" highCardinality="false" name="Target Date" caption="Target Date"><Hierarchy name="Calendar" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Period"><View alias="TARGET_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Period" column="PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Period"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "TARGET_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Months" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Month"><View alias="TARGET_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Month" column="MONTH" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Month"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "TARGET_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Weeks" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Week"><View alias="TARGET_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Week" column="WEEK" type="Numeric" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never" caption="Week"><Property name="Week" column="WEEK" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "TARGET_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy></Dimension><Dimension type="TimeDimension" foreignKey="ACTUAL_DATE_K" highCardinality="false" name="Actual Date" caption="Actual Date"><Hierarchy name="Calendar" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Period"><View alias="ACTUAL_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Period" column="PERIOD" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Period"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ACTUAL_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Months" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Month"><View alias="ACTUAL_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Month" column="MONTH" type="Numeric" uniqueMembers="false" levelType="TimeMonths" hideMemberIf="Never" caption="Month"><Property name="Month" column="PERIOD" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ACTUAL_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy><Hierarchy name="Calendar Weeks" hasAll="true" allMemberName="All Years" allMemberCaption="All Years" primaryKey="DAYS_DATE" caption="Calendar by Week"><View alias="ACTUAL_DATE"><SQL dialect="generic"> 
				select * from "ERPI"."DATE_DATA_CL" WHERE "TENANT" = '[organization]' 
			</SQL></View><Level name="Year" column="YEAR" type="Numeric" uniqueMembers="true" levelType="TimeYears" hideMemberIf="Never" caption="Year"/><Level name="Week" column="WEEK" type="Numeric" uniqueMembers="false" levelType="TimeWeeks" hideMemberIf="Never" caption="Week"><Property name="Week" column="WEEK" type="Numeric">
          </Property></Level><Level name="Date" type="Date" uniqueMembers="false" levelType="TimeDays" hideMemberIf="Never" caption="Date"><KeyExpression><SQL dialect="mssql">
              SUBSTRING(CONVERT(CHAR, "THE_DATE", 120), 1, 10)
            </SQL><SQL dialect="generic">
              "ACTUAL_DATE"."THE_DATE"
            </SQL></KeyExpression><Property name="Date" column="THE_DATE" type="String">
          </Property><Property name="Days Date" column="DAYS_DATE" type="Numeric">
          </Property></Level></Hierarchy></Dimension><Measure name="Amount, Opportunity Gross" caption="Amount, Opportunity" column="AMOUNT" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Opportunity Weighted" caption="Amount, Opportunity Weighted" column="AMOUNT_WEIGHTED" formatString="$#,###.00" aggregator="sum"/><Measure name="Percent, Opportunity Probability" caption="Percent, Opportunity Probability" column="PROBABILITY" formatString="#,###.00" aggregator="avg"/><Measure name="Count, Opportunities" caption="Count, Opportunities" column="ID_DOCUMENT_NK" formatString="#,###" aggregator="distinct-count"/><Measure name="Days Opportunity Date" column="ISSUE_DATE_K" formatString="########" aggregator="max" visible="false"/><Measure name="Days Assigned Date" column="ASSIGN_DATE_K" formatString="########" aggregator="sum" visible="false"/><Measure name="Days Target Date" column="TARGET_DATE_K" formatString="########" aggregator="sum" visible="false"/><Measure name="Days Actual Date" column="ACTUAL_DATE_K" formatString="########" aggregator="sum" visible="false"/><CalculatedMember name="Average, Opportunity Gross" caption="Average, Opportunity" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Opportunities] = 0, 0, [Measures].[Amount, Opportunity Gross]/[Measures].[Count, Opportunities])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Average, Opportunity Weighted" caption="Average, Opportunity Weighted" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Opportunities] = 0, 0, [Measures].[Amount, Opportunity Weighted]/[Measures].[Count, Opportunities])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><!--
        For dates if we have no date or we are not at the Opportunity level, return null
--><CalculatedMember name="Date, Opportunity" caption="Date, Opportunity" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Opportunity Date] is empty,  cast (null as string),
                iif([Measures].[Days Opportunity Date] = 0, "",
                getDateString(cast([Measures].[Days Opportunity Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Assigned" caption="Date, Assigned" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Assigned Date] is empty,  cast (null as string),
                iif([Measures].[Days Assigned Date] = 0, "",
                getDateString(cast([Measures].[Days Assigned Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Target" caption="Date, Target" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Target Date] is empty,  cast (null as string),
                iif([Measures].[Days Target Date] = 0, "",
                getDateString(cast([Measures].[Days Target Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Actual" caption="Date, Actual" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Actual Date] is empty,  cast (null as string),
                iif([Measures].[Days Actual Date] = 0, "",
                getDateString(cast([Measures].[Days Actual Date] as string)))))
      </Formula></CalculatedMember><!--
	  Date differences are easiest using the date surrogate key which is the number of days since 1990.  This allows
	  dates to to aggregated and subtracted over dimensions.  This is essential if you have Days differences as
	  calculated meausures (instead of just measures in a query).  In Opportunities we are missing dates, where a missing
	  date is surrogate key 0.  We must have a date so when missing we choose today.  We get the number of days since
	  1990 for today with a Java method getCurrentDays.  This means we must provide our own
	  aggregated calculation substituting today for 0.  This is done by recursively calling the calculation on the
	  Opportunities hierarchy.  Note that we are always positioned somewhere in the hierarchy.  If Opportunities are not
	  on an axis, we are positioned at the "All" member which is the default member (level.ordinal = 0).
	--><CalculatedMember name="S2A" dimension="Measures" visible="false"><Formula>
        
			iif([Measures].[Days Assigned Date] = 0, 
			  cast(getCurrentDays("today") as numeric) - [Measures].[Days Opportunity Date],
			  [Measures].[Days Assigned Date] - [Measures].[Days Opportunity Date]
			)
		
      </Formula></CalculatedMember><CalculatedMember name="S2A Sum" caption="S2A Sum" dimension="Measures" visible="false"><Formula>
        
		    iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 0,
			  sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity Status]), [Measures].[S2A Sum]),
			  iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 1,
			    sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity Stage]), [Measures].[S2A Sum]),  			    
				  iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 2,
			        sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity]), [Measures].[S2A Sum]),  
			        iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 3,
				      [Measures].[S2A], 
				      cast(null as numeric)
					)
				  )				
			  )	
			)
		
      </Formula></CalculatedMember><CalculatedMember name="Days, Start to Assigned" caption="Days, Start to Assigned" dimension="Measures" visible="true"><Formula>
        
			[Measures].[S2A Sum] / [Measures].[Count, Opportunities]
		
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###"/></CalculatedMember><CalculatedMember name="S2T" dimension="Measures" visible="false"><Formula>
        
			iif([Measures].[Days Target Date] = 0, 
			  cast(getCurrentDays("today") as numeric) - [Measures].[Days Opportunity Date],
			  [Measures].[Days Target Date] - [Measures].[Days Opportunity Date]
			)
		
      </Formula></CalculatedMember><CalculatedMember name="S2T Sum" dimension="Measures" visible="false"><Formula>
        
		    iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 0,
			  sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity Status]), [Measures].[S2T Sum]),
			  iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 1,
			    sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity Stage]), [Measures].[S2T Sum]),  
				  iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 2,
			        sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity]), [Measures].[S2T Sum]),  
			        iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 3,
				      [Measures].[S2T], 
				      cast(null as numeric)
					)
				  )				
			  )
			)
		
      </Formula></CalculatedMember><CalculatedMember name="Days, Start to Target" caption="Days, Start to Target" dimension="Measures" visible="true"><Formula>
        
			[Measures].[S2T Sum] / [Measures].[Count, Opportunities]
		
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###"/></CalculatedMember><CalculatedMember name="S2C" dimension="Measures" visible="false"><Formula>
        
			iif([Measures].[Days Actual Date] = 0, 
			  cast(getCurrentDays("today") as numeric) - [Measures].[Days Opportunity Date],
			  [Measures].[Days Actual Date] - [Measures].[Days Opportunity Date]
			)
		
      </Formula></CalculatedMember><CalculatedMember name="S2C Sum" dimension="Measures" visible="false"><Formula>
        
		    iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 0,
			  sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity Status]), [Measures].[S2C Sum]),
			  iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 1,
			    sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity Stage]), [Measures].[S2C Sum]),  
				  iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 2,
			        sum(descendants([Opportunity.Opportunity by Status by Stage].CurrentMember,[Opportunity.Opportunity by Status by Stage].[Opportunity]), [Measures].[S2C Sum]),  
			        iif(1 &gt; 0 and [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal = 3,
				      [Measures].[S2C], 
				      cast(null as numeric)
					)
				  )
			  )
			)
		
      </Formula></CalculatedMember><CalculatedMember name="Days, Start to Actual" caption="Days, Start to Actual" dimension="Measures" visible="true"><Formula>
        
			[Measures].[S2C Sum] / [Measures].[Count, Opportunities]
		
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###"/></CalculatedMember></Cube><Cube name="CROpportunityForecast" cache="true" enabled="true" caption="Opportunity Forecast" defaultMeasure="Amount, Opportunity Forecast"><View alias="CRM_OPPORTUNITY_FACTS"><SQL dialect="generic"> 
			select * from "ERPI"."CRM_OPPORTUNITY_FACTS_BY_PERIOD" WHERE "TENANT" = '[organization]' 
		</SQL></View><!--  No Company in xTuple
    <DimensionUsage source="Company" name="Company" caption="&Company;"  foreignKey="COMPANY_K" highCardinality="false">
    </DimensionUsage>
	--><!--  No Sales Organizations in xTuple
    <DimensionUsage source="Division" name="Division" caption="&Division;" foreignKey="DIVISION_K" highCardinality="false">
    </DimensionUsage>
    <DimensionUsage source="Business Unit" name="Business Unit" caption="&BusinessUnit;"  foreignKey="BUSINESS_UNIT_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="CRM Account" name="CRM Account" caption="CRM Account" foreignKey="CRM_ACCOUNT_K" highCardinality="false"/><!--  No Profit Center in xTuple Sales
    <DimensionUsage source="Profit Center" name="Profit Center" caption="&ProfitCenter;" foreignKey="PROFIT_CENTER_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="User" name="User" caption="User" foreignKey="USER_K" highCardinality="false"/><Dimension type="StandardDimension" highCardinality="false" name="Opportunity" caption="Opportunity"><Hierarchy name="Opportunity by Status by Type" hasAll="true" allMemberCaption="" allMemberName="All Opportunities" primaryKey="Opportunity_K" caption="Opportunity By Status by Type"><Level name="Opportunity Status" caption="Opportunity Status" column="STATUS" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity Type" caption="Opportunity Type" column="TYPE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity" caption="Opportunity Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy><Hierarchy name="Opportunity by Status by Stage" allMemberCaption="" hasAll="true" allMemberName="All Opportunities by Status" caption="Opportunity By Status by Stage"><Level name="Opportunity Status" caption="Opportunity Status" column="STATUS" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity Stage" caption="Opportunity Stage" column="STAGE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Opportunity" caption="Opportunity Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><DimensionUsage source="Period" name="Fiscal Period" caption="Month/Period" foreignKey="ISSUE_FISCAL_PERIOD_K" highCardinality="false"/><Measure name="Opportunity Gross" column="AMOUNT" formatString="$#,###.00" aggregator="sum" visible="false"/><Measure name="Opportunity Weighted" column="AMOUNT_WEIGHTED" formatString="$#,###.00" aggregator="sum" visible="false"/><Measure name="Percent, Forecast Probability" caption="Percent, Forecast Probability" column="PROBABILITY" formatString="#,###" aggregator="avg"/><Measure name="Count, Opportunities" caption="Count, Opportunities" column="ID_DOCUMENT_NK" formatString="#,###" aggregator="distinct-count"/><Measure name="Days Opportunity Date" column="ISSUE_DATE_K" formatString="########" aggregator="max" visible="false"/><Measure name="Days End Date" column="ISSUE_PERIOD_ENDDATE_K" formatString="########" aggregator="sum" visible="false"/><Measure name="Days Actual Date" column="ACTUAL_DATE_K" formatString="########" aggregator="max" visible="false"/><Measure name="Days Assigned Date" column="ASSIGN_DATE_K" formatString="########" aggregator="max" visible="false"/><Measure name="Days Target Date" column="TARGET_DATE_K" formatString="########" aggregator="max" visible="false"/><!--
        For dates if we have no date or we are not at the Opportunity level, return null
--><CalculatedMember name="Date, Opportunity" caption="Date, Opportunity" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Opportunity Date] is empty,  cast (null as string),
                iif([Measures].[Days Opportunity Date] = 0, "",
					getDateString(cast([Measures].[Days Opportunity Date] as string))
				)
			  )
			)
		
      </Formula></CalculatedMember><CalculatedMember name="Date, Assigned" caption="Date, Assigned" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Assigned Date] is empty,  cast (null as string),
                iif([Measures].[Days Assigned Date] = 0, "",
                getDateString(cast([Measures].[Days Assigned Date] as string))
				)
			  )
			)
		
      </Formula></CalculatedMember><CalculatedMember name="Date, Target" caption="Date, Target" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Target Date] is empty,  cast (null as string),
                iif([Measures].[Days Target Date] = 0, "",
                getDateString(cast([Measures].[Days Target Date] as string))
				)
			  )
			)
		
      </Formula></CalculatedMember><CalculatedMember name="Date, Actual" caption="Date, Actual" dimension="Measures" visible="true"><Formula>
        
            iif ([Opportunity.Opportunity by Status by Type].CurrentMember.level.ordinal &lt;&gt; 3 AND [Opportunity.Opportunity by Status by Stage].CurrentMember.level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Actual Date] is empty,  cast (null as string),
                iif([Measures].[Days Actual Date] = 0, "",
                getDateString(cast([Measures].[Days Actual Date] as string))
				)
			  )
			)
		
      </Formula></CalculatedMember><CalculatedMember name="S2E" dimension="Measures" visible="false"><Formula>
        
			[Measures].[Days End Date] - [Measures].[Days Opportunity Date]
		
      </Formula></CalculatedMember><CalculatedMember name="Days, Start to Actual" caption="Days, Start to Actual" dimension="Measures" visible="true"><Formula>
        
			iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 0,
				sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Year])), [Measures].[Days, Start to Actual]),
				iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
					sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Days, Start to Actual]),
					iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
						[Measures].[S2E] / [Measures].[Count, Opportunities],
						cast(null as numeric)
					)
				)
			)
		
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###"/></CalculatedMember><CalculatedMember name="Amount, Opportunity Forecast" caption="Amount, Opportunity Forecast" dimension="Measures" visible="true"><Formula>
        
			iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 0,
				sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Year])), [Measures].[Opportunity Gross]),
				iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
					sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Opportunity Gross]),
					iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
						[Measures].[Opportunity Gross],
						cast(null as numeric)
					)
				)
			)
		
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Amount, Forecast Weighted" caption="Amount, Forecast Weighted" dimension="Measures" visible="true"><Formula>
        
			iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 0,
				sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Year])), [Measures].[Opportunity Weighted]),				
				iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
					sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Opportunity Weighted]),
					iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
						[Measures].[Opportunity Weighted],
						cast(null as numeric)
					)
				)
			)
		
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember></Cube><!-- Sales Cubes --><Cube name="SOOrder" cache="true" enabled="true" caption="Bookings" defaultMeasure="Amount, Order Gross"><View alias="SALES_ORDER_FACTS"><SQL dialect="generic"> 
			select * from "ERPI"."SALES_ORDER_FACTS" WHERE "TENANT" = '[organization]' 
		</SQL></View><!--  No Company in xTuple
    <DimensionUsage source="Company" name="Company" caption="&Company;"  foreignKey="COMPANY_K" highCardinality="false">
    </DimensionUsage>
	--><!--  No Sales Organizations in xTuple
    <DimensionUsage source="Division" name="Division" caption="&Division;" foreignKey="DIVISION_K" highCardinality="false">
    </DimensionUsage>
    <DimensionUsage source="Business Unit" name="Business Unit" caption="&BusinessUnit;"  foreignKey="BUSINESS_UNIT_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="Customer" name="Customer" caption="Customer" foreignKey="CUSTOMER_K" highCardinality="false"/><!--  No Profit Center in xTuple Sales
    <DimensionUsage source="Profit Center" name="Profit Center" caption="&ProfitCenter;" foreignKey="PROFIT_CENTER_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="Account Rep" name="Account Rep" caption="Sales Rep" foreignKey="ACCOUNT_REP_K" highCardinality="false"/><DimensionUsage source="Product" caption="Item" name="Product" foreignKey="ITEM_K" highCardinality="false"/><DimensionUsage source="Issue Date" name="Issue Date" caption="Booking Date" foreignKey="ISSUE_DATE_K" highCardinality="false"/><DimensionUsage source="Promise Date" name="Promise Date" caption="Promise Date" foreignKey="PROMISE_DATE_K" highCardinality="false"/><Dimension type="StandardDimension" highCardinality="false" name="Order" caption="Booking"><Hierarchy hasAll="true" allMemberCaption="All Bookings" allMemberName="All Orders" primaryKey="ORDER_K" caption="Booking"><Level name="Order" caption="Booking Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Property name="Order Name" caption="" column="ID_TRANS_DOC_NK" type="String">
        </Property></Level><Level name="Order Line Item" caption="BookingLine Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy><Hierarchy name="Order by Type" allMemberCaption="All Bookings By Type" hasAll="true" allMemberName="All Orders by Type" primaryKey="ORDER_K" caption="Booking By Type"><Level name="Order Type" caption="Booking Type" column="ID_DOCUMENT_TYPE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Order" caption="Booking Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Order Line Item" caption="BookingLine Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension name="Bill City" caption="Bill-To City" foreignKey="BILL_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Bill-To Cities" allMemberName="All Bill Cities" primaryKey="GEO_DATA_K" caption="Bill-To Cities by State by Country"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">country</Annotation></Annotations></Level><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">city</Annotation></Annotations></Level></Hierarchy><Hierarchy name="Bill Region" hasAll="true" allMemberCaption="All Bill-To States" allMemberName="All Bill Regions" primaryKey="GEO_DATA_K" caption="Bill-To Region"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations></Level></Hierarchy></Dimension><Dimension name="Ship City" caption="Ship-To City" foreignKey="SHIP_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Ship-To Cities" allMemberName="All Ship Cities" primaryKey="GEO_DATA_K" caption="Ship-To Cities by Region by Country"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">country</Annotation></Annotations></Level><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">city</Annotation></Annotations></Level></Hierarchy><Hierarchy name="Ship Region" hasAll="true" allMemberCaption="All Ship-To Regions" allMemberName="All Ship Regions" primaryKey="GEO_DATA_K" caption="Ship-To Region"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations></Level></Hierarchy></Dimension><Measure name="Amount, Order Gross" caption="Amount, Booking" column="AMOUNT" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Order Gross List" caption="Amount, Customer Price" column="AMOUNT_LIST" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Order Quantity" caption="Amount, Booking Quantity" column="QUANTITY_ORDER" formatString="#,###" aggregator="sum"/><Measure name="Count, Orders" caption="Count, Bookings" column="ID_DOCUMENT_NK" formatString="#,###" aggregator="distinct-count"/><Measure name="Days Order Date" column="ISSUE_DATE_K" formatString="########" aggregator="min" visible="false"/><Measure name="Days Promise Date" column="PROMISE_DATE_K" formatString="########" aggregator="max" visible="false"/><CalculatedMember name="Amount, Order Discount" caption="Amount, Booking Discount" dimension="Measures" visible="true"><Formula>
        
                [Measures].[Amount, Order Gross List] - [Measures].[Amount, Order Gross] 
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Average, Order Gross" caption="Average, Booking" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Orders] = 0, 0, [Measures].[Amount, Order Gross]/[Measures].[Count, Orders])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><!--
        For dates if we have not date or we are not at the order level, return null
--><CalculatedMember name="Date, Order" caption="Date, Booking" dimension="Measures" visible="true"><Formula>
        
            iif ([Order].CurrentMember.level.ordinal &lt;&gt; 1 AND [Order].level.ordinal &lt;&gt; 2 AND [Order.Order by Type].level.ordinal &lt;&gt; 2 AND [Order.Order by Type].level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Order Date] is empty,  cast (null as string),
                iif([Measures].[Days Order Date] = 0, "",
                getDateString(cast([Measures].[Days Order Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Promise" caption="Date, Promise" dimension="Measures" visible="true"><Formula>
        
            iif ([Order].CurrentMember.level.ordinal &lt;&gt; 1 AND [Order].level.ordinal &lt;&gt; 2 AND [Order.Order by Type].level.ordinal &lt;&gt; 2 AND [Order.Order by Type].level.ordinal &lt;&gt; 3, "",
              iif([Measures].[Days Promise Date] is empty, cast (null as string),
                iif([Measures].[Days Promise Date] = 0, "",
                getDateString(cast([Measures].[Days Promise Date] as string)))))
      </Formula></CalculatedMember></Cube><Cube name="SODelivery" cache="true" enabled="true" caption="Shipments" defaultMeasure="Amount, Delivery Gross"><View alias="SALES_DELIVERY_FACTS"><SQL dialect="generic"> 
			select * from "ERPI"."SALES_DELIVERY_FACTS" WHERE "TENANT" = '[organization]' 
		</SQL></View><!--  No Company in xTuple	
    <DimensionUsage source="Company" name="Company" caption="&Company;"  foreignKey="COMPANY_K" highCardinality="false">
    </DimensionUsage>
	--><!--  No Sales Organizations in xTuple
    <DimensionUsage source="Division" name="Division" caption="&Division;" foreignKey="DIVISION_K" highCardinality="false">
    </DimensionUsage>
    <DimensionUsage source="Business Unit" name="Business Unit" caption="&BusinessUnit;" foreignKey="BUSINESS_UNIT_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="Customer" name="Customer" cpation="Customer" foreignKey="CUSTOMER_K" highCardinality="false"/><!--  No Profit Center in xTuple Sales
    <DimensionUsage source="Profit Center" name="Profit Center" caption="&ProfitCenter;" foreignKey="PROFIT_CENTER_K" highCardinality="false">
	</DimensionUsage>
	--><DimensionUsage source="Account Rep" name="Account Rep" caption="Sales Rep" foreignKey="ACCOUNT_REP_K" highCardinality="false"/><DimensionUsage source="Product" name="Product" caption="Item" foreignKey="ITEM_K" highCardinality="false"/><Dimension type="StandardDimension" highCardinality="false" name="Order" caption="Booking"><Hierarchy hasAll="true" allMemberCaption="All Bookings" allMemberName="All Orders" primaryKey="ORDER_K" caption="Booking"><Level name="Order" caption="Booking Number" column="ID_DOCUMENT_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Property name="Order Name" caption="" column="ID_TRANS_DOC_NK" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Order by Type" allMemberCaption="All Bookings By Type" hasAll="true" allMemberName="All Orders by Type" primaryKey="ORDER_K" caption="Booking By Type"><Level name="Order Type" caption="Booking Type" column="ID_DOCUMENT_TYPE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Order" caption="Booking Number" column="ID_DOCUMENT_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Order Line Item" caption="BookingLine Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension type="StandardDimension" highCardinality="false" name="Delivery" caption="Shipment"><Hierarchy hasAll="true" allMemberCaption="All Shipments by Number" allMemberName="All Delivery Lines by Delivery" primaryKey="DELIVERY_DOC_K" caption="Shipment by Number"><Level name="Delivery" caption="Shipment Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Property name="Delivery Name" caption="" column="ID_TRANS_DOC_NK" type="String">
        </Property></Level><Level name="Delivery Line Item" caption="Shipment Line Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><DimensionUsage source="Issue Date" name="Delivery Date" caption="Shipment Date" foreignKey="ISSUE_DATE_K" highCardinality="false"/><DimensionUsage source="Promise Date" name="Promise Date" caption="Promise Date" foreignKey="PROMISE_DATE_K" highCardinality="false"/><Dimension name="Bill City" caption="Bill-To City" foreignKey="BILL_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Bill-To Cities" allMemberName="All Bill Cities" primaryKey="GEO_DATA_K" caption="Bill-To Cities by State by Country"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">country</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">city</Annotation></Annotations></Level></Hierarchy><Hierarchy name="Bill Region" hasAll="true" allMemberCaption="All Bill-To States" allMemberName="All Bill Regions" primaryKey="GEO_DATA_K" caption="Bill-To Region"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations></Level></Hierarchy></Dimension><Dimension name="Ship City" caption="Ship-To City" foreignKey="SHIP_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Ship-To Cities" allMemberName="All Ship Cities" primaryKey="GEO_DATA_K" caption="Ship-To Cities by Region by Country"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">country</Annotation></Annotations></Level><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">city</Annotation></Annotations></Level></Hierarchy><Hierarchy name="Ship Region" hasAll="true" allMemberCaption="All Ship-To Regions" allMemberName="All Ship Regions" primaryKey="GEO_DATA_K" caption="Ship-To Region"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property><Annotations><Annotation name="Data.Role">Geography</Annotation><Annotation name="Geo.Role">state</Annotation></Annotations></Level></Hierarchy></Dimension><Measure name="Amount, Delivery Gross" caption="Amount, Shipment" column="AMOUNT" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Delivery Gross List" caption="Amount, Customer Price" column="AMOUNT_LIST" formatString="$#,###.00" aggregator="sum"/><Measure name="Amount, Order Quantity" caption="Amount, Booking Quantity" column="QUANTITY_ORDER" formatString="#,###" aggregator="sum"/><Measure name="Amount, Cost Gross" caption="Amount, Cost" column="COST" formatString="$#,###.00" aggregator="sum"/><Measure name="Count, Orders" caption="Count, Bookings" column="ID_DOCUMENT_NK" formatString="#,###" aggregator="distinct-count"/><Measure name="Count, Deliveries" caption="Count, Shipments" column="ID_TRANS_DOC_NK" formatString="#,###" aggregator="distinct-count"/><Measure name="Days Delivery Date" column="ISSUE_DATE_K" formatString="########" aggregator="min" visible="false"/><Measure name="Days Promise Date" column="PROMISE_DATE_K" formatString="########" aggregator="max" visible="false"/><CalculatedMember name="Amount, Delivery Discount" caption="Amount, Shipment Discount" dimension="Measures" visible="true"><Formula>
        
                [Measures].[Amount, Delivery Gross List] - [Measures].[Amount, Delivery Gross] 
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><!--
        For dates if we have not date or we are not at the order level, return null
--><CalculatedMember name="Date, Delivery" caption="Date, Shipment" dimension="Measures" visible="true"><Formula>
        
            iif ([Delivery].CurrentMember.level.ordinal &lt;&gt; 1 AND [Delivery].level.ordinal &lt;&gt; 2 , "",
              iif([Measures].[Days Delivery Date] is empty,  cast (null as string),
                iif([Measures].[Days Delivery Date] = 0, "",
                getDateString(cast([Measures].[Days Delivery Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Promise" caption="Date, Promise" dimension="Measures" visible="true"><Formula>
        
            iif ([Delivery].CurrentMember.level.ordinal &lt;&gt; 1 AND [Delivery].level.ordinal &lt;&gt; 2 , "",
              iif([Measures].[Days Promise Date] is empty, cast (null as string),
                iif([Measures].[Days Promise Date] = 0, "",
                getDateString(cast([Measures].[Days Promise Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Amount, Profit Gross" caption="Amount, Profit" dimension="Measures" visible="true"><Formula>
        [Measures].[Amount, Delivery Gross] - [Measures].[Amount, Cost Gross]
	</Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Percentage, Gross Margin" caption="Percentage, Margin" dimension="Measures" visible="true"><Formula> 
        
                iif([Measures].[Amount, Profit Gross] &gt; 0 AND (([Measures].[Amount, Delivery Gross] is empty) OR [Measures].[Amount, Delivery Gross] = 0), 1 
			, iif([Measures].[Amount, Profit Gross] &lt; 0 AND (([Measures].[Amount, Delivery Gross] is empty) OR [Measures].[Amount, Delivery Gross] = 0), -1 
				, iif([Measures].[Amount, Profit Gross] is empty AND (NOT ([Measures].[Amount, Delivery Gross] is empty)), 0 
					, ([Measures].[Amount, Profit Gross] / [Measures].[Amount, Delivery Gross])) ) )
	</Formula><CalculatedMemberProperty name="FORMAT_STRING" value="##.00%"/></CalculatedMember><CalculatedMember name="Average, Delivery Gross" caption="Average, Shipment" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Deliveries] = 0, 0, [Measures].[Amount, Delivery Gross]/[Measures].[Count, Deliveries])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Average, Cost Gross" caption="Average, Cost" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Deliveries] = 0, 0, [Measures].[Amount, Cost Gross]/[Measures].[Count, Deliveries])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Average, Profit Gross" caption="Average, Profit" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Count, Deliveries] = 0, 0, [Measures].[Amount, Profit Gross]/[Measures].[Count, Deliveries])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember></Cube><Cube name="SOByPeriod" cache="true" enabled="true" caption="Shipment Backlog" defaultMeasure="[Measures].[Balance, Orders Unfulfilled]"><View alias="SO_FACTS_BY_PERIOD"><SQL dialect="generic"> 
			select * from "ERPI"."SO_FACTS_BY_PERIOD" WHERE "TENANT" = '[organization]' 
		</SQL></View><!--  No Company in xTuple
    <DimensionUsage source="Company" caption="&Company;" name="Company" foreignKey="COMPANY_K" highCardinality="false">
    </DimensionUsage>
	--><!--  No Sales Organizations in xTuple
    <DimensionUsage source="Division" name="Division" caption="&Division;" foreignKey="DIVISION_K" highCardinality="false">
    </DimensionUsage>
    <DimensionUsage source="Business Unit" name="Business Unit" caption="&BusinessUnit;" foreignKey="BUSINESS_UNIT_K" highCardinality="false">
    </DimensionUsage>
	--><DimensionUsage source="Customer" name="Customer" caption="Customer" foreignKey="CUSTOMER_K" highCardinality="false"/><!--  No Profit Center in xTuple Sales
    <DimensionUsage source="Profit Center" name="Profit Center" caption="&ProfitCenter;" foreignKey="PROFIT_CENTER_K" highCardinality="false">
	</DimensionUsage>
	--><DimensionUsage source="Account Rep" caption="Sales Rep" name="Account Rep" foreignKey="ACCOUNT_REP_K" highCardinality="false"/><DimensionUsage source="Product" caption="Item" name="Product" foreignKey="ITEM_K" highCardinality="false"/><DimensionUsage source="Period" name="Fiscal Period" caption="Month/Period" foreignKey="FISCAL_PERIOD_K" highCardinality="false"/><Dimension type="StandardDimension" highCardinality="false" name="Order" caption="Booking"><Hierarchy hasAll="true" allMemberCaption="All Bookings" allMemberName="All Orders" primaryKey="ORDER_K" caption="Booking"><Level name="Order" caption="Booking Number" column="ID_DOCUMENT_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"><Property name="Order Name" caption="" column="ID_TRANS_DOC_NK" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Order by Type" caption="Booking By Type" allMemberCaption="All Bookings By Type" hasAll="true" allMemberName="All Orders by Type" primaryKey="ORDER_K"><Level name="Order Type" caption="Booking Type" column="ID_DOCUMENT_TYPE" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Order" caption="Booking Number" column="ID_TRANS_DOC_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Order Line Item" caption="BookingLine Number" column="LINE_NK" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/></Hierarchy></Dimension><Dimension name="Bill City" caption="Bill-To City" foreignKey="BILL_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Bill-To Cities" allMemberName="All Bill Cities" primaryKey="GEO_DATA_K" caption="Bill-To Cities by State by Country"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Bill Region" hasAll="true" allMemberCaption="All Bill-To States" allMemberName="All Bill Regions" primaryKey="GEO_DATA_K" caption="Bill-To Region"><View alias="BILL_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level></Hierarchy></Dimension><Dimension name="Ship City" caption="Ship-To City" foreignKey="SHIP_CITY_K" highCardinality="false"><Hierarchy hasAll="true" allMemberCaption="All Ship-To Cities" allMemberName="All Ship Cities" primaryKey="GEO_DATA_K" caption="Ship-To Cities by Region by Country"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Country Name" caption="Country" column="COUNTRY_NAME" type="String" uniqueMembers="false" levelType="Regular" hideMemberIf="Never"/><Level name="Region Code" caption="Region" column="REGION_CODE_ISO" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level><Level name="City Name" caption="City" column="CITY_ACCENT_NAME" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Longitude" caption="Logitude" column="LONGITUDE" type="Numeric">
        </Property><Property name="Latitude" caption="Latitude" column="LATITUDE" type="Numeric">
        </Property><Property name="Name" caption="City" column="CITY_NAME" type="String">
        </Property><Property name="Region" caption="Region" column="REGION_CODE_ISO" type="String">
        </Property></Level></Hierarchy><Hierarchy name="Ship Region" hasAll="true" allMemberCaption="All Ship-To Regions" allMemberName="All Ship Regions" primaryKey="GEO_DATA_K" caption="Ship-To Region"><View alias="SHIP_CITY"><SQL dialect="generic"> 
			select * from "ERPI"."GEO_CITIES_DATA" WHERE "TENANT" = '[organization]' 
		</SQL></View><Level name="Region Code" caption="Region" column="REGION_CODE" type="String" uniqueMembers="true" levelType="Regular" hideMemberIf="Never"><Property name="Region Name" caption="Region" column="REGION_CODE" type="String">
        </Property></Level></Hierarchy></Dimension><Measure name="Count, Orders" caption="Count, Bookings" formatString="#,###" aggregator="distinct-count" visible="true"><MeasureExpression><SQL dialect="generic">
          (case when "SO_FACTS_BY_PERIOD"."ID_DOCUMENT_NK" &lt;&gt; 'Unspecified' then
                        "SO_FACTS_BY_PERIOD"."ID_DOCUMENT_NK" ELSE NULL END)
        </SQL></MeasureExpression></Measure><Measure name="Days Order Date" column="ISSUE_DATE_K" formatString="########" aggregator="sum" visible="false"/><Measure name="Days Delivery Date" column="DELIVERY_DATE_K" formatString="########" aggregator="sum" visible="false"/><Measure name="Days End Date" column="ENDDATE" formatString="########" aggregator="sum" visible="false"/><Measure name="Delivery Sum" column="DELIVERY SUM" formatString="#,##0.00" aggregator="sum" visible="false"/><Measure name="Order Sum" column="ORDER SUM" formatString="#,##0.00" aggregator="sum" visible="false"/><Measure name="Cost Sum" column="COST SUM" formatString="#,##0.00" aggregator="sum" visible="false"/><CalculatedMember name="Order Balance" dimension="Measures" formatString="$#,###.00" visible="false"><Formula>
        
           iif([Measures].[Delivery Sum] &gt; [Measures].[Order Sum], 0, [Measures].[Order Sum] - [Measures].[Delivery Sum])
        
	</Formula></CalculatedMember><!-- 
	Copyright 2012 Jeff Gunderson
	Licensed under the GNU Public License, Version 3.0
	--><CalculatedMember name="Balance, Orders Unfulfilled" caption="Balance, Backlog" dimension="Measures" visible="true"><Formula>
        iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
			sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Order Balance]),
		iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
            [Measures].[Order Balance],
         cast(null as numeric)))
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="O2D Days" caption="Days, Booking to Shipment" dimension="Measures" visible="false"><Formula>
        
           [Measures].[Days End Date] - [Measures].[Days Order Date]
        
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###"/></CalculatedMember><CalculatedMember name="Days, Order to Delivery" caption="Days, Booking to Shipment" dimension="Measures" visible="true"><Formula>
        iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
		sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Days, Order to Delivery]),
		iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
              [Measures].[O2D Days] / [Measures].[Count, Orders],
        cast(null as numeric)))
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###"/></CalculatedMember><CalculatedMember name="Interest, O2D Impact" caption="Interest, B2S Impact" dimension="Measures" visible="true"><Formula>
        [Measures].[Days, Order to Delivery] * [Measures].[Balance, Orders Unfulfilled] * ParamRef("APRValue") / 360
	</Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><!--
        For dates if we have no date or we are not at the order level, return null
--><CalculatedMember name="Date, Order" caption="Date, Booking" dimension="Measures" visible="true"><Formula>
        
            iif ([Order].CurrentMember.level.ordinal &lt;&gt; 1, "",
              iif([Measures].[Days Order Date] is empty, cast (null as string),
                iif([Measures].[Days Order Date] = 0, "",
                getDateString(cast([Measures].[Days Order Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Date, Last Delivery" caption="Date, Shipment" dimension="Measures" visible="true"><Formula>
        
            iif ([Order].CurrentMember.level.ordinal &lt;&gt; 1, "",
              iif([Measures].[Days Delivery Date] is empty, cast (null as string),
                iif([Measures].[Days Delivery Date] = 0, "",
                getDateString(cast([Measures].[Days Delivery Date] as string)))))
      </Formula></CalculatedMember><CalculatedMember name="Amount, Delivery Gross" caption="Amount, Shipment" dimension="Measures" visible="true"><Formula>
        iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
			sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Delivery Sum]),
		iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
            [Measures].[Delivery Sum],
        cast(null as numeric)))
      </Formula>&gt;
	  <CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Amount, Order Gross" caption="Amount, Booking" dimension="Measures" visible="true"><Formula>
        iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
			sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Order Sum]),
		iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
            [Measures].[Order Sum],
        cast(null as numeric)))
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember><CalculatedMember name="Amount, Cost Gross" caption="Amount, Cost" dimension="Measures" visible="true"><Formula>
        iif(1 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 1,
			sum(tail(descendants([Fiscal Period].CurrentMember,[Fiscal Period].[Fiscal Period])), [Measures].[Cost Sum]),
		iif(2 &gt; 0 and [Fiscal Period].CurrentMember.level.ordinal = 2,
            [Measures].[Cost Sum],
        cast(null as numeric)))
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="$#,###.00"/></CalculatedMember></Cube><VirtualCube name="CROpportunityAndOrder" caption="Opportunities and Bookings" enabled="true"><CubeUsages><CubeUsage cubeName="CROpportunity" ignoreUnrelatedDimensions="false"/><CubeUsage cubeName="SOOrder" ignoreUnrelatedDimensions="false"/></CubeUsages><VirtualCubeDimension name="Issue Date" caption="" highCardinality="false"/><VirtualCubeMeasure cubeName="SOOrder" name="[Measures].[Amount, Order Gross]"/><VirtualCubeMeasure cubeName="CROpportunity" name="[Measures].[Amount, Opportunity Gross]"/><VirtualCubeMeasure cubeName="CROpportunity" name="[Measures].[Amount, Opportunity Weighted]"/><VirtualCubeMeasure cubeName="SOOrder" name="[Measures].[Count, Orders]"/><VirtualCubeMeasure cubeName="CROpportunity" name="[Measures].[Count, Opportunities]"/><VirtualCubeMeasure cubeName="SOOrder" name="[Measures].[Amount, Order Discount]"/><VirtualCubeMeasure cubeName="SOOrder" name="[Measures].[Average, Order Gross]"/><VirtualCubeMeasure cubeName="CROpportunity" name="[Measures].[Average, Opportunity Gross]"/><VirtualCubeMeasure cubeName="CROpportunity" name="[Measures].[Average, Opportunity Weighted]"/><CalculatedMember name="Ratio, Conversion" caption="Ratio, Conversion" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Amount, Opportunity Gross] = 0, 0, [Measures].[Amount, Order Gross]/[Measures].[Amount, Opportunity Gross])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###.00"/></CalculatedMember><CalculatedMember name="Ratio, Conversion Weighted" caption="Ratio, Conversion Weighted" dimension="Measures" visible="true"><Formula>
        
                iif([Measures].[Amount, Opportunity Weighted] = 0, 0, [Measures].[Amount, Order Gross]/[Measures].[Amount, Opportunity Weighted])
      </Formula><CalculatedMemberProperty name="FORMAT_STRING" value="#,###.00"/></CalculatedMember></VirtualCube><!-- User Roles --><!-- 
	Copyright 2012 Jeff Gunderson
	Licensed under the GNU Public License, Version 3.0
--><!--
	Mondrian does not support more than one role per user.  Results are
	unpredictable with more than one role.  Note that pentaho supports
	multiple roles.  Mondrian roles are mapped to pentaho roles in
	pentahoObjects.spring.xml
--><Role name="Sales"><SchemaGrant access="none"><CubeGrant cube="SOOrder" access="all"/><CubeGrant cube="SODelivery" access="all"/><CubeGrant cube="SOByPeriod" access="all"/><CubeGrant cube="SOOrder" access="all"/><CubeGrant cube="CRQuote" access="all"/><CubeGrant cube="CROpportunity" access="all"/><CubeGrant cube="CROpportunityForecast" access="all"/><CubeGrant cube="CROpportunityAndOrder" access="all"/></SchemaGrant></Role><!-- 
	Copyright 2012 Jeff Gunderson
	Licensed under the GNU Public License, Version 3.0
--><Role name="Authenticated"><SchemaGrant access="none"/></Role><UserDefinedFunction name="getDateString" className="com.erpbi.GetDateInfo"/><UserDefinedFunction name="getCurrentDays" className="com.erpbi.GetDateInfo"/></Schema>